## Gitlab CI/CD template for Moodle plugins By Ldesign Media.
## Author: Hamza Tamyachte
## Copyright 17/07/2024 Mfreak.nl | LdesignMedia.nl - Luuk Verhoeven

services:
  - mysql:latest
  - name: selenium/standalone-chrome:3
    alias: selenium-standalone-chrome
variables:
  PHP_VERSION: "8.0"
  TRAVIS_BUILD_DIR: "$CI_PROJECT_DIR"
  MOODLE_REPO: "https://github.com/moodle/moodle.git"
  LANGUAGE_CHECK_SCRIPT_URL: "https://raw.githubusercontent.com/LdesignMedia/gitlab-ci/refs/heads/86c3jwyjm_language-string-checker/check_language_strings.sh"

  # Workplace branches
  MOODLE_BRANCH_WORKPLACE500S: WORKPLACE_500_0
  MOODLE_BRANCH_WORKPLACE405S: WORKPLACE_405_0
  MOODLE_BRANCH_WORKPLACE404S: WORKPLACE_404_3
  MOODLE_BRANCH_WORKPLACE403S: WORKPLACE_403_7
  MOODLE_BRANCH_WORKPLACE402S: WORKPLACE_402_10
  MOODLE_BRANCH_WORKPLACE401S: WORKPLACE_401_13

  # Moodle branches
  MOODLE_BRANCH_LATEST: main
  MOODLE_BRANCH_LMS500: MOODLE_500_STABLE
  MOODLE_BRANCH_LMS405: MOODLE_405_STABLE
  MOODLE_BRANCH_LMS404: MOODLE_404_STABLE
  MOODLE_BRANCH_LMS403: MOODLE_403_STABLE
  MOODLE_BRANCH_LMS402: MOODLE_402_STABLE
  MOODLE_BRANCH_LMS401: MOODLE_401_STABLE
  MOODLE_BRANCH_LMS400: MOODLE_400_STABLE
  MOODLE_BRANCH_LMS39: MOODLE_39_STABLE

  # Selenium configuration
  MOODLE_BEHAT_WDHOST: "http://selenium-standalone-chrome:4444/wd/hub"
  MOODLE_START_BEHAT_SERVERS: "NO"

  # Database configuration
  DB: "mysqli"
  MYSQL_ROOT_PASSWORD: "superrootpass"
  MYSQL_ALLOW_EMPTY_PASSWORD: "true"

.scriptshorttest: &scriptshorttest
  image: moodlehq/moodle-workplace-plugin-ci:$PHP_VERSION
  script:
    - echo -e "section_start:$(date +%s):env[collapsed=true]\r"
    # Prevent checking styles.scss and styles.css files, as they are incorrectly formatted by PHPStorm, and there is no reliable way to validate them.
    - if [ -f styles.scss ]; then echo "Removing styles.scss"; rm -f styles.scss; else echo "styles.scss not found, skipping."; fi
    - if [ -f styles.css ]; then echo "Removing styles.css"; rm -f styles.css; else echo "styles.css not found, skipping."; fi
    - apt update && apt install -y mariadb-client
    - cd $CI_PROJECT_DIR/..
    - echo $MOODLE_REPO
    - rm -rf moodle
    # Install Moodle includes the setup of PHPUnit and Behat when tests exist in the plugin directory.
    - export IPADDRESS=`grep "${HOSTNAME}$" /etc/hosts |awk '{print $1}'`
    - export MOODLE_BEHAT_WWWROOT="http://${IPADDRESS}:8000"
    - moodle-plugin-ci install --db-user=root --db-pass=superrootpass --db-host=mysql -vvv
    - cd moodle
    - php -S ${IPADDRESS}:8000 -t $CI_PROJECT_DIR/../moodle > /dev/null 2>&1 &
    - echo -e "section_end:$(date +%s):env\r"
    - |
      GREEN='\033[32m'
      ORANGE='\033[38;5;214m'
      RED='\033[31m'
      RESET='\033[0m'
      
      # Highlight function for WARNING and ERROR
      highlight_errors() {
      
          declare -A patterns
      
          # Define colors for the different patterns.
          patterns=(
                ["FOUND 0 ERRORS"]=$GREEN
                ["ERROR"]=$RED
                ["WARNING"]=$ORANGE
                ["File is stale and needs to be rebuilt"]=$RED
          )
          
          # Define the order explicitly, needed for the correct coloring.
          order=(
              "FOUND 0 ERRORS"
              "ERROR"
              "WARNING"
              "File is stale and needs to be rebuilt"
          )
          
          # Read input line by line
          while IFS= read -r line; do
            matched=false
            for pattern in "${order[@]}"; do
              if [[ "$line" == *"$pattern"* ]]; then
                echo -e "${patterns[$pattern]}${line}${RESET}"
                matched=true
                break
              fi
            done
      
            # If no pattern matches, print the line as-is
            if [[ $matched == false ]]; then
              echo "$line"
            fi
          done
      }
      declare -f highlight_errors
      
      run_with_error_handling() {
        local test_command="$1"
        local allow_errors_var="$2"
        local allow_errors="${!allow_errors_var}"
        
        echo -e "${ORANGE}Running test ${test_command}:${RESET}"
      
        if [ "$allow_errors" = "true" ]; then
          eval "$test_command" 2>&1 | highlight_errors || true
          echo -e "${ORANGE}Test ${test_command} completed with errors (ignored).${RESET}"
        else
          eval "$test_command" 2>&1 | highlight_errors
          echo -e "${ORANGE}Test ${test_command} completed successfully.${RESET}"
        fi
      }

      echo -e "${ORANGE}Setup completed. Running the tests now:${RESET}"
      run_with_error_handling "curl -sL '$LANGUAGE_CHECK_SCRIPT_URL' | bash -s -- '$CI_PROJECT_DIR/../moodle'" "ALLOW_ERRORS_LANGUAGE_CHECK"
      run_with_error_handling "moodle-plugin-ci phplint" "ALLOW_ERRORS_PHPLINT"
      run_with_error_handling "moodle-plugin-ci phpcpd" "ALLOW_ERRORS_PHPCPD"
      run_with_error_handling "moodle-plugin-ci phpmd" "ALLOW_ERRORS_PHPMD"
      run_with_error_handling "moodle-plugin-ci codechecker" "ALLOW_ERRORS_CODECHECKER"
      run_with_error_handling "moodle-plugin-ci mustache" "ALLOW_ERRORS_MUSTACHE"
      run_with_error_handling "moodle-plugin-ci validate" "ALLOW_ERRORS_VALIDATE"
      run_with_error_handling "moodle-plugin-ci savepoints" "ALLOW_ERRORS_SAVEPOINTS"
      run_with_error_handling "moodle-plugin-ci grunt --tasks=amd" "ALLOW_ERRORS_GRUNT"
      run_with_error_handling "moodle-plugin-ci grunt --tasks=yui" "ALLOW_ERRORS_GRUNT"
      run_with_error_handling "moodle-plugin-ci grunt --tasks=gherkinlint" "ALLOW_ERRORS_GRUNT"
      # we skip stylelint check as it is not reliable, and not support css on other places.
      run_with_error_handling "moodle-plugin-ci phpdoc" "ALLOW_ERRORS_PHPDOC"
      run_with_error_handling "moodle-plugin-ci phpunit" "ALLOW_ERRORS_PHPUNIT"
      run_with_error_handling "vendor/bin/phpunit --colors --no-coverage --testsuite tool_dataprivacy_testsuite,tool_policy_testsuite,core_privacy_testsuite" "ALLOW_ERRORS_PRIVACY"
      run_with_error_handling "moodle-plugin-ci behat --suite default --profile chrome" "ALLOW_ERRORS_BEHAT"
      run_with_error_handling "moodle-plugin-ci behat --auto-rerun=0 --profile chrome admin/tool/xmldb" "ALLOW_ERRORS_XMLDB"
      run_with_error_handling "php admin/cli/check_database_schema.php" "ALLOW_ERRORS_DATABASE_SCHEMA"
  allow_failure: true
  except:
    - tags
